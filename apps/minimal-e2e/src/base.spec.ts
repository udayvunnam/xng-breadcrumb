import { test, expect } from '@playwright/test';

test.beforeEach(async ({ page }) => {
  await page.goto('/');
});

test('toggle breadcrumbs visibility with ngIf', async ({ page }) => {
  await expect(page.locator('xng-breadcrumb')).toBeHidden();
  await page.getByRole('button', { name: 'Toggle Breadcrumb Visibility' }).click();
  await expect(page.locator('xng-breadcrumb').first()).toHaveText('Dashboard');
  await page.getByRole('button', { name: 'Toggle Breadcrumb Visibility' }).click();
  await expect(page.locator('xng-breadcrumb')).toBeHidden();
});

test('show breadcrumbs when routeReuseStrategy is false', async ({ page }) => {
  await page.getByText('Toggle Breadcrumb Visibility').click();
  await page.getByRole('link', { name: 'Order Details' }).click();

  const breadcrumbs = page.locator('xng-breadcrumb').first();
  await expect(breadcrumbs).toHaveText('Companies / Company Name / Orders / Order Details');
});

test('show breadcrumbs if dynamically set with autoGenerate false', async ({ page }) => {
  await page.getByText('Toggle Breadcrumb Visibility').click();
  await page.getByRole('link', { name: 'Order Items' }).click();

  const autoGeneratedBreadcrumbs = page.locator('xng-breadcrumb').first();
  await expect(autoGeneratedBreadcrumbs).toHaveText('Companies  /  Company Name  /  Orders  /  Order Details  / items');

  const autoGenerationDisabledBreadcrumbs = page.locator('xng-breadcrumb').nth(1);
  await expect(autoGenerationDisabledBreadcrumbs).toHaveText('Companies / Company Name / Orders / Order Details');

  await page.getByRole('button', { name: 'Set Order Items Label' }).click();
  await expect(autoGenerationDisabledBreadcrumbs).toHaveText('Companies / Company Name / Orders / Order Details / My Order Items');
});
